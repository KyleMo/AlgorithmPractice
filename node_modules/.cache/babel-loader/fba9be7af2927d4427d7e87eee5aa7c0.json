{"ast":null,"code":"var _jsxFileName = \"/Users/kylemonstad/Desktop/dsa/frontend/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Problem from './components/Problem.js';\nimport twoSums from './algorithms/twoSums.js';\nimport isPalendrome from './algorithms/isPalendrome.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(isPalendrome('amma')); // true\n\nconsole.log(isPalendrome('ammam')); // false\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Data Structures and Algorithms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problems\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: /*#__PURE__*/_jsxDEV(Problem, {\n            title: \"Two Sums\",\n            details: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.You can return the answer in any order.\",\n            input: \"Input: nums = [2,7,11,15], target = 9\",\n            expectedOutput: \"Output: [0,1]\",\n            inputPlaceholder: \"Enter an array without brackets. Ex: 1,9,5,6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Problem","twoSums","isPalendrome","console","log","App"],"sources":["/Users/kylemonstad/Desktop/dsa/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Problem from './components/Problem.js'\nimport twoSums from './algorithms/twoSums.js'\nimport isPalendrome from './algorithms/isPalendrome.js'\n\n\nconsole.log(isPalendrome('amma')) // true\nconsole.log(isPalendrome('ammam')) // false\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Data Structures and Algorithms</h1>\n        <div className=\"problems\">\n          <ol>\n            <Problem\n              title=\"Two Sums\"\n              details=\"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.You can return the answer in any order.\"\n              input=\"Input: nums = [2,7,11,15], target = 9\"\n              expectedOutput=\"Output: [0,1]\"\n              inputPlaceholder=\"Enter an array without brackets. Ex: 1,9,5,6\"\n              ></Problem>\n          </ol>\n\n\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAGAC,OAAO,CAACC,GAAR,CAAYF,YAAY,CAAC,MAAD,CAAxB,E,CAAkC;;AAClCC,OAAO,CAACC,GAAR,CAAYF,YAAY,CAAC,OAAD,CAAxB,E,CAAmC;;AAInC,SAASG,GAAT,GAAe;EACb,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAQ,SAAS,EAAC,YAAlB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE;UAAA,uBACE,QAAC,OAAD;YACE,KAAK,EAAC,UADR;YAEE,OAAO,EAAC,8QAFV;YAGE,KAAK,EAAC,uCAHR;YAIE,cAAc,EAAC,eAJjB;YAKE,gBAAgB,EAAC;UALnB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;KAtBQA,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}