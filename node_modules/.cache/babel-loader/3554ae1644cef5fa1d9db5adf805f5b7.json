{"ast":null,"code":"const mergeTwoLists = list1 => {\n  let currNode = list1.head;\n\n  while (currValue.next !== null) {\n    console.log(currNode.val);\n    currValue = currValue.next;\n  }\n  /*\n    const mergeHead = undefined;\n      // linked list travesal\n    // with each trave\n     while(list1.next !== null && list2.next !== null){\n         list1 = list1.next\n        list2 = list2.next\n    }\n      return mergedHead\n    */\n\n};\n\nexport default mergeTwoLists;","map":{"version":3,"names":["mergeTwoLists","list1","currNode","head","currValue","next","console","log","val"],"sources":["/Users/kylemonstad/Desktop/dsa/frontend/src/algorithms/mergeTwoSortList.js"],"sourcesContent":["\n\nconst mergeTwoLists = (list1) => {\n\n    let currNode = list1.head\n    while(currValue.next !== null){\n        console.log(currNode.val)\n        currValue = currValue.next\n    }\n\n\n\n  /*\n    const mergeHead = undefined;\n \n    // linked list travesal\n    // with each trave\n\n    while(list1.next !== null && list2.next !== null){\n\n        list1 = list1.next\n        list2 = list2.next\n    }\n\n\n    return mergedHead\n    */\n}\n\n\n\nexport default mergeTwoLists\n\n"],"mappings":"AAEA,MAAMA,aAAa,GAAIC,KAAD,IAAW;EAE7B,IAAIC,QAAQ,GAAGD,KAAK,CAACE,IAArB;;EACA,OAAMC,SAAS,CAACC,IAAV,KAAmB,IAAzB,EAA8B;IAC1BC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,GAArB;IACAJ,SAAS,GAAGA,SAAS,CAACC,IAAtB;EACH;EAIH;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMC,CAzBD;;AA6BA,eAAeL,aAAf"},"metadata":{},"sourceType":"module"}