{"ast":null,"code":"const isAnagram = (s, t) => {\n  if (s.length !== t.length) {\n    return false;\n  }\n\n  let letters = {};\n\n  for (let i = 0; i < s.length; i++) {\n    console.log(s[i]);\n\n    if (letters[s[i]]) {\n      letters = {\n        [s[i]]: 1\n      };\n    } else {\n      let count = letters[s[i]];\n      letters = {\n        [s[i]]: count + 1\n      };\n    }\n  }\n\n  console.log('bye' + letters);\n};\n\nexport default isAnagram;","map":{"version":3,"names":["isAnagram","s","t","length","letters","i","console","log","count"],"sources":["/Users/kylemonstad/Desktop/dsa/frontend/src/algorithms/validAnagram.js"],"sourcesContent":["\n\nconst isAnagram = (s, t) => {\n    if (s.length !== t.length){\n        return false\n    }\n    \n    let letters = {}\n    \n    for (let i=0;i<s.length;i++){\n\n        console.log(s[i])\n        \n        if (letters[s[i]]){\n            letters = {\n                [s[i]]: 1\n            }\n        } else {\n            let count = letters[s[i]]\n            letters = {\n                [s[i]]: count + 1\n            }\n        }\n    }\n\n    console.log('bye' + letters)\n}\n\nexport default isAnagram;"],"mappings":"AAEA,MAAMA,SAAS,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;EACxB,IAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA0B;IACtB,OAAO,KAAP;EACH;;EAED,IAAIC,OAAO,GAAG,EAAd;;EAEA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACJ,CAAC,CAACE,MAAjB,EAAwBE,CAAC,EAAzB,EAA4B;IAExBC,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACI,CAAD,CAAb;;IAEA,IAAID,OAAO,CAACH,CAAC,CAACI,CAAD,CAAF,CAAX,EAAkB;MACdD,OAAO,GAAG;QACN,CAACH,CAAC,CAACI,CAAD,CAAF,GAAQ;MADF,CAAV;IAGH,CAJD,MAIO;MACH,IAAIG,KAAK,GAAGJ,OAAO,CAACH,CAAC,CAACI,CAAD,CAAF,CAAnB;MACAD,OAAO,GAAG;QACN,CAACH,CAAC,CAACI,CAAD,CAAF,GAAQG,KAAK,GAAG;MADV,CAAV;IAGH;EACJ;;EAEDF,OAAO,CAACC,GAAR,CAAY,QAAQH,OAApB;AACH,CAxBD;;AA0BA,eAAeJ,SAAf"},"metadata":{},"sourceType":"module"}