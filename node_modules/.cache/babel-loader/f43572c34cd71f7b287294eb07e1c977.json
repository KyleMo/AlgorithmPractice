{"ast":null,"code":"const isAnagram = (s, t) => {\n  if (s.length !== t.length) {\n    return false;\n  }\n\n  const letters = {};\n  console.log('hi' + letters);\n\n  for (let i = 0; i < s.length; i++) {\n    if (letters.s[i] === undefined) {\n      letters = {\n        [s[i]]: 1\n      };\n    } else {\n      let count = letters[s[i]];\n      letters = {\n        [s[i]]: count + 1\n      };\n    }\n  }\n\n  console.log('bye' + letters);\n};\n\nexport default isAnagram;","map":{"version":3,"names":["isAnagram","s","t","length","letters","console","log","i","undefined","count"],"sources":["/Users/kylemonstad/Desktop/dsa/frontend/src/algorithms/validAnagram.js"],"sourcesContent":["\n\nconst isAnagram = (s, t) => {\n    if (s.length !== t.length){\n        return false\n    }\n    \n    const letters = {}\n    console.log('hi' + letters)\n    \n    for (let i=0;i<s.length;i++){\n        \n        if (letters.s[i] === undefined){\n            letters = {\n                [s[i]]: 1\n            }\n        } else {\n            let count = letters[s[i]]\n            letters = {\n                [s[i]]: count + 1\n            }\n        }\n    }\n\n    console.log('bye' + letters)\n}\n\nexport default isAnagram;"],"mappings":"AAEA,MAAMA,SAAS,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;EACxB,IAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA0B;IACtB,OAAO,KAAP;EACH;;EAED,MAAMC,OAAO,GAAG,EAAhB;EACAC,OAAO,CAACC,GAAR,CAAY,OAAOF,OAAnB;;EAEA,KAAK,IAAIG,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACN,CAAC,CAACE,MAAjB,EAAwBI,CAAC,EAAzB,EAA4B;IAExB,IAAIH,OAAO,CAACH,CAAR,CAAUM,CAAV,MAAiBC,SAArB,EAA+B;MAC3BJ,OAAO,GAAG;QACN,CAACH,CAAC,CAACM,CAAD,CAAF,GAAQ;MADF,CAAV;IAGH,CAJD,MAIO;MACH,IAAIE,KAAK,GAAGL,OAAO,CAACH,CAAC,CAACM,CAAD,CAAF,CAAnB;MACAH,OAAO,GAAG;QACN,CAACH,CAAC,CAACM,CAAD,CAAF,GAAQE,KAAK,GAAG;MADV,CAAV;IAGH;EACJ;;EAEDJ,OAAO,CAACC,GAAR,CAAY,QAAQF,OAApB;AACH,CAvBD;;AAyBA,eAAeJ,SAAf"},"metadata":{},"sourceType":"module"}