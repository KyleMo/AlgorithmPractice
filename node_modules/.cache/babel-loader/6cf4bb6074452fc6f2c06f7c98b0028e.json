{"ast":null,"code":"const maxProfit = prices => {\n  let lowestPrice = 1000000;\n  let highestPrice = 0;\n  let newArr = [];\n\n  for (let i = 0; i < prices.length; i++) {\n    if (prices[i] < lowestPrice) {\n      lowestPrice = prices[i];\n      counter++;\n      newArr = prices.slice(i);\n    }\n  }\n\n  for (let i = 0; i < newArr.length; i++) {\n    if (newArr[i] > highestPrice) {\n      highestPrice = newArr[i];\n    }\n  }\n\n  return highestPrice - lowestPrice;\n};\n\nexport default maxProfit;","map":{"version":3,"names":["maxProfit","prices","lowestPrice","highestPrice","newArr","i","length","counter","slice"],"sources":["/Users/kylemonstad/Desktop/dsa/frontend/src/algorithms/bestTimeToBuySell.js"],"sourcesContent":["\nconst maxProfit = (prices) => {\n    let lowestPrice = 1000000;\n    let highestPrice = 0;\n    let newArr = []\n    \n    for (let i=0; i<prices.length; i++){\n        if(prices[i] < lowestPrice){\n            lowestPrice = prices[i]\n            counter++;\n            newArr = prices.slice(i)\n        }\n        \n    }\n\n    for (let i=0; i < newArr.length; i++){\n        if (newArr[i] > highestPrice){\n            highestPrice = newArr[i]\n        }\n    }\n\n    return highestPrice - lowestPrice\n\n}\n\nexport default maxProfit;"],"mappings":"AACA,MAAMA,SAAS,GAAIC,MAAD,IAAY;EAC1B,IAAIC,WAAW,GAAG,OAAlB;EACA,IAAIC,YAAY,GAAG,CAAnB;EACA,IAAIC,MAAM,GAAG,EAAb;;EAEA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,MAAM,CAACK,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;IAC/B,IAAGJ,MAAM,CAACI,CAAD,CAAN,GAAYH,WAAf,EAA2B;MACvBA,WAAW,GAAGD,MAAM,CAACI,CAAD,CAApB;MACAE,OAAO;MACPH,MAAM,GAAGH,MAAM,CAACO,KAAP,CAAaH,CAAb,CAAT;IACH;EAEJ;;EAED,KAAK,IAAIA,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGD,MAAM,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;IACjC,IAAID,MAAM,CAACC,CAAD,CAAN,GAAYF,YAAhB,EAA6B;MACzBA,YAAY,GAAGC,MAAM,CAACC,CAAD,CAArB;IACH;EACJ;;EAED,OAAOF,YAAY,GAAGD,WAAtB;AAEH,CAtBD;;AAwBA,eAAeF,SAAf"},"metadata":{},"sourceType":"module"}