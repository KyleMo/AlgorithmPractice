{"ast":null,"code":"import ListNode from './ListNode.js';\n\nconst mergeTwoLists = (list1, list2) => {\n  let dummy = new ListNode();\n  let mergeHead = dummy;\n\n  while (list1 && list2) {\n    if (list1.val <= list2.val) {\n      mergeHead.next = list1;\n      list1 = list1.next;\n    } else {\n      mergeHead.next = list2;\n      list2 = list2.next;\n    }\n\n    mergeHead = mergeHead.next;\n  }\n\n  if (list1) {\n    mergeHead.next = list1;\n  } else if (list2) {\n    mergeHead.next = list2;\n  }\n\n  return dummy.next;\n};\n\nexport default mergeTwoLists;","map":{"version":3,"names":["ListNode","mergeTwoLists","list1","list2","dummy","mergeHead","val","next"],"sources":["/Users/kylemonstad/Desktop/dsa/frontend/src/algorithms/mergeTwoSortList.js"],"sourcesContent":["\nimport ListNode from './ListNode.js'\n\nconst mergeTwoLists = (list1, list2) => {\n\n    let dummy = new ListNode()\n    let mergeHead = dummy\n\n\n    while(list1 && list2){\n       \n        if (list1.val <= list2.val){\n            mergeHead.next = list1\n            list1 = list1.next\n        }\n        else {\n            mergeHead.next = list2\n            list2 = list2.next\n        }\n\n        mergeHead = mergeHead.next\n    }\n\n    if (list1){\n        mergeHead.next = list1\n    }\n    else if (list2) {\n        mergeHead.next = list2\n    }\n\n    return dummy.next\n}\n\nexport default mergeTwoLists\n\n"],"mappings":"AACA,OAAOA,QAAP,MAAqB,eAArB;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;EAEpC,IAAIC,KAAK,GAAG,IAAIJ,QAAJ,EAAZ;EACA,IAAIK,SAAS,GAAGD,KAAhB;;EAGA,OAAMF,KAAK,IAAIC,KAAf,EAAqB;IAEjB,IAAID,KAAK,CAACI,GAAN,IAAaH,KAAK,CAACG,GAAvB,EAA2B;MACvBD,SAAS,CAACE,IAAV,GAAiBL,KAAjB;MACAA,KAAK,GAAGA,KAAK,CAACK,IAAd;IACH,CAHD,MAIK;MACDF,SAAS,CAACE,IAAV,GAAiBJ,KAAjB;MACAA,KAAK,GAAGA,KAAK,CAACI,IAAd;IACH;;IAEDF,SAAS,GAAGA,SAAS,CAACE,IAAtB;EACH;;EAED,IAAIL,KAAJ,EAAU;IACNG,SAAS,CAACE,IAAV,GAAiBL,KAAjB;EACH,CAFD,MAGK,IAAIC,KAAJ,EAAW;IACZE,SAAS,CAACE,IAAV,GAAiBJ,KAAjB;EACH;;EAED,OAAOC,KAAK,CAACG,IAAb;AACH,CA5BD;;AA8BA,eAAeN,aAAf"},"metadata":{},"sourceType":"module"}