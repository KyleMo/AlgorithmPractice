{"ast":null,"code":"const maxProfit = pricesArr => {\n  let lowestPrice = 1000000;\n  let highestPrice = 0;\n  let counter = 0;\n\n  for (let i = 0; i < prices.length; i++) {\n    if (prices[i] < lowestPrice) {\n      lowestPrice = prices[i];\n    }\n\n    counter++;\n  }\n\n  const newArr = pricesArr.slice(counter);\n\n  for (let i = 0; i < newArr.length; i++) {\n    if (newArr[i] > highestPrice) {\n      highestPrice = newArr[i];\n    }\n  }\n\n  return highestPrice - lowestPrice;\n};","map":{"version":3,"names":["maxProfit","pricesArr","lowestPrice","highestPrice","counter","i","prices","length","newArr","slice"],"sources":["/Users/kylemonstad/Desktop/dsa/frontend/src/algorithms/bestTimeToBuySell.js"],"sourcesContent":["\nconst maxProfit = (pricesArr) => {\n    let lowestPrice = 1000000;\n    let highestPrice = 0;\n    let counter = 0;\n    \n    for (let i=0; i<prices.length; i++){\n        if(prices[i] < lowestPrice){\n            lowestPrice = prices[i]\n        }\n        counter++;\n    }\n\n    const newArr = pricesArr.slice(counter)\n\n    for (let i=0; i < newArr.length; i++){\n        if (newArr[i] > highestPrice){\n            highestPrice = newArr[i]\n        }\n    }\n\n    return highestPrice - lowestPrice\n\n\n}"],"mappings":"AACA,MAAMA,SAAS,GAAIC,SAAD,IAAe;EAC7B,IAAIC,WAAW,GAAG,OAAlB;EACA,IAAIC,YAAY,GAAG,CAAnB;EACA,IAAIC,OAAO,GAAG,CAAd;;EAEA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACC,MAAM,CAACC,MAAvB,EAA+BF,CAAC,EAAhC,EAAmC;IAC/B,IAAGC,MAAM,CAACD,CAAD,CAAN,GAAYH,WAAf,EAA2B;MACvBA,WAAW,GAAGI,MAAM,CAACD,CAAD,CAApB;IACH;;IACDD,OAAO;EACV;;EAED,MAAMI,MAAM,GAAGP,SAAS,CAACQ,KAAV,CAAgBL,OAAhB,CAAf;;EAEA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGG,MAAM,CAACD,MAAzB,EAAiCF,CAAC,EAAlC,EAAqC;IACjC,IAAIG,MAAM,CAACH,CAAD,CAAN,GAAYF,YAAhB,EAA6B;MACzBA,YAAY,GAAGK,MAAM,CAACH,CAAD,CAArB;IACH;EACJ;;EAED,OAAOF,YAAY,GAAGD,WAAtB;AAGH,CAvBD"},"metadata":{},"sourceType":"module"}